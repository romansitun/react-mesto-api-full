{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co/';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"password\": \"somepassword\",\n      \"email\": \"email@yandex.ru\"\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","authorize","data","jwt","localStorage","setItem"],"sources":["C:/Users/Роман/mesto-react/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co/';\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            \"password\": \"somepassword\",\r\n            \"email\": \"email@yandex.ru\"\r\n        })\r\n    })\r\n        .then((response) => {\r\n            try {\r\n                if (response.status === 200) {\r\n                    return response.json();\r\n                }\r\n            } catch (e) {\r\n                return (e)\r\n            }\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then((response => response.json()))\r\n        .then((data) => {\r\n            if (data.jwt) {\r\n                localStorage.setItem('jwt', data.jwt);\r\n                return data;\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n}; "],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,gCAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACzC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IAC/BK,MAAM,EAAE,MADuB;IAE/BC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAFsB;IAM/BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACjB,YAAY,cADK;MAEjB,SAAS;IAFQ,CAAf;EANyB,CAAvB,CAAL,CAWFC,IAXE,CAWIC,QAAD,IAAc;IAChB,IAAI;MACA,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;QACzB,OAAOD,QAAQ,CAACE,IAAT,EAAP;MACH;IACJ,CAJD,CAIE,OAAOC,CAAP,EAAU;MACR,OAAQA,CAAR;IACH;EACJ,CAnBE,EAoBFJ,IApBE,CAoBIK,GAAD,IAAS;IACX,OAAOA,GAAP;EACH,CAtBE,EAuBFC,KAvBE,CAuBKC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAvBb,CAAP;AAwBH,CAzBM;AA4BP,OAAO,MAAMG,SAAS,GAAG,CAAClB,KAAD,EAAQC,QAAR,KAAqB;EAC1C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IAC/BK,MAAM,EAAE,MADuB;IAE/BC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAFsB;IAM/BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EANyB,CAAvB,CAAL,CAQFO,IARE,CAQIC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EARhB,EASFH,IATE,CASIW,IAAD,IAAU;IACZ,IAAIA,IAAI,CAACC,GAAT,EAAc;MACVC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,GAAjC;MACA,OAAOD,IAAP;IACH;EACJ,CAdE,EAeFL,KAfE,CAeIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAfX,CAAP;AAgBH,CAjBM"},"metadata":{},"sourceType":"module"}