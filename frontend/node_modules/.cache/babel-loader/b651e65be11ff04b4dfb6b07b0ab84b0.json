{"ast":null,"code":"export const BASE_URL = 'http://localhost:3000';\n\nfunction handleResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}\n\nexport const register = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${BASE_URL}/sign-up`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => handleResponse(res));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/sign-in`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => handleResponse(res)).then(() => {\n    if (token) {\n      localStorage.setItem('jwt', token);\n      return data;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => handleResponse(res)).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","handleResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","credentials","headers","body","JSON","stringify","then","authorize","token","localStorage","setItem","data","checkToken"],"sources":["C:/Users/Роман/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'http://localhost:3000';\r\n\r\n\r\nfunction handleResponse(res) {\r\n    if (res.ok) {\r\n        return res.json();\r\n    } else {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n}\r\n\r\nexport const register = ({ email, password }) => {\r\n    return fetch(`${BASE_URL}/sign-up`, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n        })\r\n    })\r\n        .then((res) => handleResponse(res))\r\n};\r\n\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/sign-in`, {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            email,\r\n            password,\r\n        })\r\n    })\r\n        .then((res) => handleResponse(res))\r\n        .then(() => {\r\n            if (token) {\r\n                localStorage.setItem('jwt', token);\r\n                return data;\r\n\r\n            }\r\n        })\r\n};\r\n\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n        .then((res) => handleResponse(res))\r\n        .then(data => data)\r\n} \r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAjB;;AAGP,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;EACzB,IAAIA,GAAG,CAACC,EAAR,EAAY;IACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACH,CAFD,MAEO;IACH,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACH;AACJ;;AAED,OAAO,MAAMC,QAAQ,GAAG,QAAyB;EAAA,IAAxB;IAAEC,KAAF;IAASC;EAAT,CAAwB;EAC7C,OAAOC,KAAK,CAAE,GAAEX,QAAS,UAAb,EAAwB;IAChCY,MAAM,EAAE,MADwB;IAEhCC,WAAW,EAAE,SAFmB;IAGhCC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAHuB;IAOhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACjBR,KADiB;MAEjBC;IAFiB,CAAf;EAP0B,CAAxB,CAAL,CAYFQ,IAZE,CAYIhB,GAAD,IAASD,cAAc,CAACC,GAAD,CAZ1B,CAAP;AAaH,CAdM;AAiBP,OAAO,MAAMiB,SAAS,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;EAC1C,OAAOC,KAAK,CAAE,GAAEX,QAAS,UAAb,EAAwB;IAChCY,MAAM,EAAE,MADwB;IAEhCC,WAAW,EAAE,SAFmB;IAGhCC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAHuB;IAOhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACjBR,KADiB;MAEjBC;IAFiB,CAAf;EAP0B,CAAxB,CAAL,CAYFQ,IAZE,CAYIhB,GAAD,IAASD,cAAc,CAACC,GAAD,CAZ1B,EAaFgB,IAbE,CAaG,MAAM;IACR,IAAIE,KAAJ,EAAW;MACPC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,KAA5B;MACA,OAAOG,IAAP;IAEH;EACJ,CAnBE,CAAP;AAoBH,CArBM;AAwBP,OAAO,MAAMC,UAAU,GAAIJ,KAAD,IAAW;EACjC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAb,EAAyB;IACjCY,MAAM,EAAE,KADyB;IAEjCC,WAAW,EAAE,SAFoB;IAGjCC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB,kBAFX;MAGL,iBAAkB,UAASM,KAAM;IAH5B;EAHwB,CAAzB,CAAL,CASFF,IATE,CASIhB,GAAD,IAASD,cAAc,CAACC,GAAD,CAT1B,EAUFgB,IAVE,CAUGK,IAAI,IAAIA,IAVX,CAAP;AAWH,CAZM"},"metadata":{},"sourceType":"module"}