{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0420\\u043E\\u043C\\u0430\\u043D\\\\mesto-react\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport * as auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    onLogin\n  } = _ref;\n  const initialData = {\n    email: '',\n    password: ''\n  };\n  const [profileData, setProfileData] = useState(initialData);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileData(profileData => ({ ...profileData,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!profileData.password || !profileData.email) {\n      return;\n    }\n\n    onLogin(profileData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login__title\",\n      children: \"\\u0412\\u0445\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      autoComplete: \"on\",\n      className: \"login__email-input\",\n      placeholder: \"Email\",\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      value: profileData.email,\n      onChange: handleChange,\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      autoComplete: \"on\",\n      className: \"login__password-input\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      value: profileData.password,\n      onChange: handleChange,\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login__button\",\n      type: \"submit\",\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n} // class Login extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             email: '',\n//             password: ''\n//         }\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n//     handleChange(e) {\n//         const { name, value } = e.target;\n//         this.setState({\n//             [name]: value\n//         });\n//     }\n//     handleSubmit(e) {\n//         e.preventDefault()\n//         if (!this.state.email || !this.state.password) {\n//             return;\n//         }\n//         auth.authorize(this.state.email, this.state.password)\n//             .then((data) => {\n//                 if (data.jwt) {\n//                     this.setState({ email: '', password: '' }, () => {\n//                         this.props.handleLogin();\n//                         this.props.history.push('/');\n//                     })\n//                 }\n//             })\n//             .catch(err => console.log(err)); // запускается, если пользователь не найден\n//     }\n//     render() {\n//         return (\n//             <form className=\"login\" onSubmit={this.handleSubmit}>\n//                 <h1 className=\"login__title\">Вход</h1>\n//                 <input className=\"login-input__email\" placeholder=\"Email\" required id=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange} ></input>\n//                 <input className=\"login-input__password\" placeholder=\"Пароль\" required id=\"password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange}></input>\n//                 <button type=\"submit\" onSubmit={this.handleSubmit} className=\"login__button\">Войти</button>\n//             </form>\n//         )\n//     }\n// }\n// export default withRouter(Login); \n\n_s(Login, \"1r0Lm+Za0ECMy/yPJTimf1Ugx+U=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Link","withRouter","auth","Login","onLogin","initialData","email","password","profileData","setProfileData","useState","handleChange","e","name","value","target","handleSubmit","preventDefault"],"sources":["C:/Users/Роман/mesto-react/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport * as auth from '../utils/auth';\r\n\r\n\r\nexport default function Login({ onLogin }) {\r\n    const initialData = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    const [profileData, setProfileData] = useState(initialData);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setProfileData(profileData => ({\r\n            ...profileData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!profileData.password || !profileData.email) {\r\n            return;\r\n        }\r\n\r\n        onLogin(profileData)\r\n    }\r\n\r\n    return (\r\n        <form className=\"login\" onSubmit={handleSubmit}>\r\n            <h1 className=\"login__title\">Вход</h1>\r\n            <input autoComplete=\"on\" className=\"login__email-input\" placeholder=\"Email\" id=\"email\" name=\"email\" type=\"email\" value={profileData.email} onChange={handleChange} minLength=\"2\" maxLength=\"40\" required />\r\n            <input autoComplete=\"on\" className=\"login__password-input\" placeholder=\"Пароль\" id=\"password\" name=\"password\" type=\"password\" value={profileData.password} onChange={handleChange} minLength=\"2\" maxLength=\"40\" required />\r\n            <button className=\"login__button\" type=\"submit\">Войти</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Login extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             email: '',\r\n//             password: ''\r\n//         }\r\n//         this.handleChange = this.handleChange.bind(this);\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n//     }\r\n//     handleChange(e) {\r\n//         const { name, value } = e.target;\r\n//         this.setState({\r\n//             [name]: value\r\n//         });\r\n//     }\r\n//     handleSubmit(e) {\r\n//         e.preventDefault()\r\n//         if (!this.state.email || !this.state.password) {\r\n//             return;\r\n//         }\r\n//         auth.authorize(this.state.email, this.state.password)\r\n//             .then((data) => {\r\n//                 if (data.jwt) {\r\n//                     this.setState({ email: '', password: '' }, () => {\r\n//                         this.props.handleLogin();\r\n//                         this.props.history.push('/');\r\n//                     })\r\n//                 }\r\n//             })\r\n//             .catch(err => console.log(err)); // запускается, если пользователь не найден\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <form className=\"login\" onSubmit={this.handleSubmit}>\r\n//                 <h1 className=\"login__title\">Вход</h1>\r\n//                 <input className=\"login-input__email\" placeholder=\"Email\" required id=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange} ></input>\r\n//                 <input className=\"login-input__password\" placeholder=\"Пароль\" required id=\"password\" name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange}></input>\r\n//                 <button type=\"submit\" onSubmit={this.handleSubmit} className=\"login__button\">Войти</button>\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default withRouter(Login); \r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;;AAGA,eAAe,SAASC,KAAT,OAA4B;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EACvC,MAAMC,WAAW,GAAG;IAChBC,KAAK,EAAE,EADS;IAEhBC,QAAQ,EAAE;EAFM,CAApB;EAKA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,CAACL,WAAD,CAA9C;;EAEA,MAAMM,YAAY,GAAIC,CAAD,IAAO;IACxB,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,CAAC,CAACG,MAA1B;IACAN,cAAc,CAACD,WAAW,KAAK,EAC3B,GAAGA,WADwB;MAE3B,CAACK,IAAD,GAAQC;IAFmB,CAAL,CAAZ,CAAd;EAIH,CAND;;EAQA,MAAME,YAAY,GAAIJ,CAAD,IAAO;IACxBA,CAAC,CAACK,cAAF;;IAEA,IAAI,CAACT,WAAW,CAACD,QAAb,IAAyB,CAACC,WAAW,CAACF,KAA1C,EAAiD;MAC7C;IACH;;IAEDF,OAAO,CAACI,WAAD,CAAP;EACH,CARD;;EAUA,oBACI;IAAM,SAAS,EAAC,OAAhB;IAAwB,QAAQ,EAAEQ,YAAlC;IAAA,wBACI;MAAI,SAAS,EAAC,cAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAO,YAAY,EAAC,IAApB;MAAyB,SAAS,EAAC,oBAAnC;MAAwD,WAAW,EAAC,OAApE;MAA4E,EAAE,EAAC,OAA/E;MAAuF,IAAI,EAAC,OAA5F;MAAoG,IAAI,EAAC,OAAzG;MAAiH,KAAK,EAAER,WAAW,CAACF,KAApI;MAA2I,QAAQ,EAAEK,YAArJ;MAAmK,SAAS,EAAC,GAA7K;MAAiL,SAAS,EAAC,IAA3L;MAAgM,QAAQ;IAAxM;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAO,YAAY,EAAC,IAApB;MAAyB,SAAS,EAAC,uBAAnC;MAA2D,WAAW,EAAC,sCAAvE;MAAgF,EAAE,EAAC,UAAnF;MAA8F,IAAI,EAAC,UAAnG;MAA8G,IAAI,EAAC,UAAnH;MAA8H,KAAK,EAAEH,WAAW,CAACD,QAAjJ;MAA2J,QAAQ,EAAEI,YAArK;MAAmL,SAAS,EAAC,GAA7L;MAAiM,SAAS,EAAC,IAA3M;MAAgN,QAAQ;IAAxN;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAQ,SAAS,EAAC,eAAlB;MAAkC,IAAI,EAAC,QAAvC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,C,CAcD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GA7FwBR,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}